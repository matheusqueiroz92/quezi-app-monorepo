import { buildApp } from "./app";
import { env } from "./config/env";

/**
 * Inicializa o servidor
 */
async function start() {
  try {
    const app = await buildApp();

    await app.listen({
      port: env.PORT,
      host: env.HOST,
    });

    console.log(`
   ========================================================
   üöÄ Servidor Quezi API iniciado com sucesso!
   ========================================================
                                                     
   üåç URL: http://${env.HOST}:${env.PORT}         
   üìö Docs: http://${env.HOST}:${env.PORT}/docs           
   üè• Health: http://${env.HOST}:${env.PORT}/health 
   üîß Ambiente: ${env.NODE_ENV}                        
   ========================================================
    `);
  } catch (error) {
    console.error("‚ùå Erro ao iniciar o servidor:", error);
    process.exit(1);
  }
}

// Graceful shutdown
// Esses dois m√©todos est√£o ouvindo sinais do sistema operacional: "SIGINT" (normalmente enviado quando voc√™ pressiona Ctrl+C no terminal)
// e "SIGTERM" (um sinal padr√£o de finaliza√ß√£o, por exemplo, quando o sistema faz um shutdown ou um processo de gerenciamento finaliza o app).
// Quando um desses sinais √© recebido, o callback exibe uma mensagem informando que o servidor est√° sendo encerrado
// e finaliza o processo com exit code 0 (encerramento normal e controlado).
process.on("SIGINT", async () => {
  console.log("\n‚è≥ Encerrando servidor...");
  process.exit(0);
});

process.on("SIGTERM", async () => {
  console.log("\n‚è≥ Encerrando servidor...");
  process.exit(0);
});

start();
