### 游빍 Testes da API Quezi
### Use a extens칚o REST Client no VS Code ou ferramentas como Postman/Insomnia

@baseUrl = http://localhost:3333/api/v1
@host = http://localhost:3333

### ========================================
### HEALTH CHECKS
### ========================================

### Health Check Principal
GET {{host}}/health

### Endpoint de Teste
GET {{baseUrl}}/test

### ========================================
### USERS - CREATE
### ========================================

### 1. Criar Cliente
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "cliente@teste.com",
  "password": "SenhaForte123",
  "name": "Jo칚o Silva",
  "phone": "+5511999999999",
  "userType": "CLIENT"
}

###

### 2. Criar Profissional
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "profissional@teste.com",
  "password": "SenhaSegura456",
  "name": "Maria Santos",
  "phone": "+5511988888888",
  "userType": "PROFESSIONAL"
}

###

### 3. Tentar criar com email duplicado (deve retornar erro 409)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "cliente@teste.com",
  "password": "OutraSenha789",
  "name": "Pedro Costa",
  "userType": "CLIENT"
}

###

### 4. Criar com senha fraca (deve retornar erro 400)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "teste@fraco.com",
  "password": "123",
  "name": "Teste Fraco",
  "userType": "CLIENT"
}

### ========================================
### USERS - READ (LIST)
### ========================================

### 5. Listar todos os usu치rios (primeira p치gina)
GET {{baseUrl}}/users?page=1&limit=10

###

### 6. Listar apenas CLIENTs
GET {{baseUrl}}/users?page=1&limit=10&userType=CLIENT

###

### 7. Listar apenas PROFESSIONALs
GET {{baseUrl}}/users?page=1&limit=10&userType=PROFESSIONAL

###

### 8. Buscar usu치rios com filtro de nome
GET {{baseUrl}}/users?page=1&limit=10&search=Silva

###

### 9. Listar com pagina칞칚o (segunda p치gina, 5 itens)
GET {{baseUrl}}/users?page=2&limit=5

### ========================================
### USERS - READ (BY ID)
### ========================================

### 10. Buscar usu치rio por ID
### 丘멆잺 SUBSTITUIR pelo ID real retornado na cria칞칚o
GET {{baseUrl}}/users/COLE_O_ID_AQUI

###

### 11. Buscar usu치rio inexistente (deve retornar 404)
GET {{baseUrl}}/users/00000000-0000-0000-0000-000000000000

###

### 12. Buscar com ID inv치lido (deve retornar 400)
GET {{baseUrl}}/users/id-invalido

### ========================================
### USERS - UPDATE
### ========================================

### 13. Atualizar nome do usu치rio
### 丘멆잺 SUBSTITUIR pelo ID real
PUT {{baseUrl}}/users/COLE_O_ID_AQUI
Content-Type: application/json

{
  "name": "Jo칚o Silva Atualizado"
}

###

### 14. Atualizar email e telefone
### 丘멆잺 SUBSTITUIR pelo ID real
PUT {{baseUrl}}/users/COLE_O_ID_AQUI
Content-Type: application/json

{
  "email": "novo.email@teste.com",
  "phone": "+5511977777777"
}

###

### 15. Tentar atualizar com email duplicado (deve retornar 409)
### 丘멆잺 SUBSTITUIR pelo ID real
PUT {{baseUrl}}/users/COLE_O_ID_AQUI
Content-Type: application/json

{
  "email": "profissional@teste.com"
}

### ========================================
### USERS - DELETE
### ========================================

### 16. Deletar usu치rio
### 丘멆잺 SUBSTITUIR pelo ID real
DELETE {{baseUrl}}/users/COLE_O_ID_AQUI

###

### 17. Tentar deletar usu치rio j치 deletado (deve retornar 404)
DELETE {{baseUrl}}/users/COLE_O_ID_AQUI

###

### 18. Tentar deletar com ID inv치lido (deve retornar 400)
DELETE {{baseUrl}}/users/id-invalido

### ========================================
### TESTES DE VALIDA칂츾O
### ========================================

### 19. Email inv치lido
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "email-sem-arroba",
  "password": "SenhaForte123",
  "name": "Teste Valida칞칚o",
  "userType": "CLIENT"
}

###

### 20. Nome muito curto
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "teste@validacao.com",
  "password": "SenhaForte123",
  "name": "Jo",
  "userType": "CLIENT"
}

###

### 21. Senha sem n칰mero
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "teste@senha.com",
  "password": "SenhaForte",
  "name": "Teste Senha",
  "userType": "CLIENT"
}

###

### 22. UserType inv치lido
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "teste@tipo.com",
  "password": "SenhaForte123",
  "name": "Teste Tipo",
  "userType": "ADMIN"
}

###

### 23. Campo obrigat칩rio faltando
POST {{baseUrl}}/users
Content-Type: application/json

{
  "email": "teste@campo.com",
  "name": "Teste Campo"
}

