### üè¢ Testes de Organizations e RBAC - Quezi API
### Use a extens√£o REST Client no VS Code

@baseUrl = http://localhost:3333/api/v1
@token = 
@orgId = 

### ========================================
### SETUP - FAZER LOGIN PRIMEIRO
### ========================================

### 1. Login (cole o token na vari√°vel @token acima)
# @name login
POST {{baseUrl}}/auth/sign-in/email
Content-Type: application/json

{
  "email": "profissional1@teste.com",
  "password": "SenhaForte123"
}

### ========================================
### CRIAR ORGANIZA√á√ÉO
### ========================================

### 2. Criar Sal√£o de Beleza
# @name createOrg
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Sal√£o Beleza Total",
  "slug": "salao-beleza-total",
  "description": "O melhor sal√£o de beleza da cidade"
}

### Copie o ID da organiza√ß√£o da resposta acima e cole em @orgId

###

### 3. Criar Cl√≠nica de Est√©tica
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Cl√≠nica Est√©tica Avan√ßada",
  "slug": "clinica-estetica-avancada",
  "description": "Tratamentos est√©ticos de ponta"
}

###

### 4. Tentar criar com slug duplicado (deve retornar 409)
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Outro Sal√£o",
  "slug": "salao-beleza-total"
}

###

### ========================================
### CONVIDAR MEMBROS
### ========================================

### 5. Convidar Cabeleireira (como OWNER)
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "maria.cabeleireira@example.com",
  "role": "MEMBER"
}

###

### 6. Convidar Gerente (como OWNER)
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "carlos.gerente@example.com",
  "role": "ADMIN"
}

###

### 7. Convidar Manicure (como OWNER)
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "ana.manicure@example.com",
  "role": "MEMBER"
}

###

### ========================================
### GERENCIAR ROLES
### ========================================

### 8. Promover MEMBER para ADMIN (apenas OWNER pode)
PUT {{baseUrl}}/organizations/member/role
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "memberId": "COLE_O_ID_DO_MEMBRO_AQUI",
  "role": "ADMIN"
}

###

### 9. Rebaixar ADMIN para MEMBER (apenas OWNER pode)
PUT {{baseUrl}}/organizations/member/role
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "memberId": "COLE_O_ID_DO_MEMBRO_AQUI",
  "role": "MEMBER"
}

###

### ========================================
### LISTAR ORGANIZA√á√ïES
### ========================================

### 10. Listar minhas organiza√ß√µes
GET {{baseUrl}}/organizations/my
Authorization: Bearer {{token}}

###

### ========================================
### TESTES DE PERMISS√ïES
### ========================================

### 11. Erro: Tentar convidar sem ser OWNER/ADMIN
# Fa√ßa login com um MEMBER primeiro
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "novo@member.com",
  "role": "MEMBER"
}

###

### 12. Erro: Tentar alterar role sem ser OWNER
# Fa√ßa login com um ADMIN primeiro
PUT {{baseUrl}}/organizations/member/role
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "memberId": "member-id",
  "role": "ADMIN"
}

###

### 13. Erro: Acessar sem autentica√ß√£o
POST {{baseUrl}}/organizations
Content-Type: application/json

{
  "name": "Teste Sem Auth",
  "slug": "teste-sem-auth"
}

###

### ========================================
### CASOS DE USO REAIS
### ========================================

### 14. Cen√°rio: Profissional Aut√¥nomo
# Maria atende sozinha em casa (sem organization)
# Ela j√° pode criar servi√ßos direto no seu perfil profissional

###

### 15. Cen√°rio: Criar Sal√£o com Equipe
# 1. Ana cria o sal√£o (vira OWNER)
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Sal√£o da Ana",
  "slug": "salao-da-ana"
}

# 2. Ana convida Maria como cabeleireira
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "maria@example.com",
  "role": "MEMBER"
}

# 3. Ana convida Carlos como gerente
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "carlos@example.com",
  "role": "ADMIN"
}

###

### 16. Cen√°rio: Profissional em M√∫ltiplos Locais
# Maria trabalha em 2 lugares
GET {{baseUrl}}/organizations/my
Authorization: Bearer {{token}}

# Resposta esperada:
# [
#   { "name": "Sal√£o ABC", "role": "MEMBER" },
#   { "name": "Studio Maria", "role": "OWNER" }
# ]

###

### ========================================
### VALIDA√á√ïES
### ========================================

### 17. Erro: Nome muito curto
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "AB",
  "slug": "ab"
}

###

### 18. Erro: Slug com caracteres especiais
POST {{baseUrl}}/organizations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Sal√£o ABC",
  "slug": "Sal√£o@ABC#123"
}

###

### 19. Erro: Email de convite inv√°lido
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "email-sem-arroba",
  "role": "MEMBER"
}

###

### 20. Erro: Role inv√°lida no convite
POST {{baseUrl}}/organizations/invite
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "organizationId": "{{orgId}}",
  "email": "teste@example.com",
  "role": "SUPERADMIN"
}

